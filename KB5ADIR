KB5ADIR  CEEENTRY AUTO=WORKSIZE,MAIN=YES,PLIST=OS                       00000800
*---------------------------------------------------------------------- 00000900
*  KB5ADIR - LISTAR MIEMBROS DE UNA LIBRER¡A                            00001000
*---------------------------------------------------------------------- 00001100
         yregs                                                          00001200
         using worka,r13                                                00001300
         lr    r10,r1              get pointer to parm                  00001400
         using parm,r10                                                 00001500
*        bras  r14,debug                                                00001600
         l     r1,scratch                                               00001700
         l     r9,4(r1)              get scr                            00001800
         l     r2,calltype                                              00001900
         clc   0(4,r2),=F'-2'        SQLUDF_TF_FIRST -2                 00002000
         jne   open                                                     00002100
         bras  r14,checkp                                               00002200
         j     end                                                      00002300
open     clc   0(4,r2),=F'-1'        SQLUDF_TF_OPEN  -1                 00002400
         jne   fetch                                                    00002500
         bras  r14,alloc                                                00002600
         j     end                                                      00002700
fetch    clc   0(4,r2),=F'0'         SQLUDF_TF_FETCH  0                 00002800
         jne   close                                                    00002900
         bras  r14,nextmemb                                             00003000
         j     end                                                      00003100
close    clc   0(4,r2),=F'1'         SQLUDF_TF_CLOSE  1                 00003200
         jne   final                                                    00003300
         bras  r14,free                                                 00003400
         j     end                                                      00003500
final    clc   0(4,r2),=F'2'         SQLUDF_TF_FINAL  2                 00003600
         jne   end                                                      00003700
end      ceeterm rc=0                                                   00003800
*---------------------------------------------------------------------- 00003900
*  debug                                                                00004000
*---------------------------------------------------------------------- 00004100
debug    st    r14,debug_s                                              00004200
         mvc   debugl(2),=al2(80)                                       00004300
         mvc   debugt,=cl80' '                                          00004400
         mvc   debugt+0(8),=CL8'KB5ADIR'                                00004500
         l     r1,calltype                                              00004600
         mvc   debugt+10(4),0(r1)                                       00004700
         l     r1,sqlstate                                              00004800
         mvc   debugt+20(5),0(r1)                                       00004900
         mvc   wto1(mwtol),mwto                                         00005000
         la    r3,debugl                                                00005100
         wto   text=(r3),mf=(E,wto1)                                    00005200
         l     r14,debug_s                                              00005300
         br    r14                                                      00005400
*---------------------------------------------------------------------- 00005500
*  Checkp                                                               00005600
*---------------------------------------------------------------------- 00005700
checkp   st    r14,checkp_s                                             00005800
         l     r1,ilib                                                  00005900
         clc   0(2,r1),=h'0'                                            00006000
         jne   invalid                                                  00006100
         l     r1,lib                                                   00006200
         clc   0(2,r1),=h'0'                                            00006300
         je    invalid                                                  00006400
         clc   0(2,r1),=h'44'                                           00006500
         jh    invalid                                                  00006600
checkpr  l     r14,checkp_s                                             00006700
         br    r14                                                      00006800
invalid  l     r1,sqlstate                                              00006900
         mvc   0(5,r1),=CL5'38601'                                      00007000
         l     r1,msgtxt                                                00007100
         mvc   0(2,r1),=h'27'                                           00007200
         mvc   2(27,r1),=cl27'Invalid parm value. Token 1'              00007300
         j     checkpr                                                  00007400
*---------------------------------------------------------------------- 00007500
*  Alloc                                                                00007600
*---------------------------------------------------------------------- 00007700
alloc    st    r14,alloc_s                                              00007800
         storage OBTAIN,length=scrsize,loc=24    get working storage    00007900
         lr    r9,r1                                                    00008000
         using scr,r9                                                   00008100
         l     r1,scratch                                               00008200
         st    r9,4(r1)                          save scr in scratch    00008300
         mvc   dsntu,=al2(daldsnam)                                     00008400
         mvc   dsntuc,=al2(1)                                           00008500
         l     r1,lib                                                   00008600
         lh    r2,0(r1)                                                 00008700
         sth   r2,dsntul                                                00008800
mvcdsn   mvc   dsntud(0),2(r1)                                          00008900
         bctr  r2,0                                                     00009000
         ex    r2,mvcdsn                                                00009100
         mvc   statustu,=al2(dalstats)                                  00009200
         mvc   statustc,=al2(1)                                         00009300
         mvc   statustl,=al2(1)                                         00009400
         mvi   statustd,x'08'                                           00009500
         mvc   retddnu,=al2(dalrtddn)                                   00009600
         mvc   retddnc,=al2(1)                                          00009700
         mvc   retddnl,=al2(8)                                          00009800
         mvc   retddnd,=cl8' '                                          00009900
         la    r2,ds99                                                  00010000
         using s99rbp,r2                                                00010100
         la    r3,s99rbptr+4                                            00010200
         using s99rb,r3                                                 00010300
         st    r3,s99rbptr                                              00010400
         oi    s99rbptr,s99rbpnd                                        00010500
         xc    s99rb(rblen),s99rb                                       00010600
         mvi   s99rbln,rblen                                            00010700
         mvi   s99verb,s99vrbal                                         00010800
         la    r4,s99rb+rblen                                           00010900
         using s99tupl,r4                                               00011000
         st    r4,s99txtpp                                              00011100
         la    r5,dsntu                                                 00011200
         st    r5,s99tuptr                                              00011300
         la    r4,s99tupl+4                                             00011400
         la    r5,statustu                                              00011500
         st    r5,s99tuptr                                              00011600
         la    r5,retddnu                                               00011700
         using s99tunit,r5                                              00011800
         la    r4,s99tupl+4                                             00011900
         st    r5,s99tuptr                                              00012000
         oi    s99tuptr,s99tupln                                        00012100
         la    r1,ds99                                                  00012200
         dynalloc                                                       00012300
         ltr   r15,r15                                                  00012400
         jnz   allocerr                                                 00012500
         mvc   input(minputl),minput                                    00012600
         mvc   open1(mopenl),mopen                                      00012700
         mvc   input+40(8),retddnd                                      00012800
         OPEN  (INPUT,(INPUT)),MODE=31,MF=(E,OPEN1)                     00012900
         xc    saver3,saver3                                            00013000
allocr   l     r14,alloc_s                                              00013100
         br    r14                                                      00013200
allocerr l     r1,sqlstate                                              00013300
         mvc   0(5,r1),=CL5'38602'                                      00013400
         l     r1,msgtxt                                                00013500
         mvc   0(2,r1),=h'26'                                           00013600
         mvc   2(14,r1),=c'Dynalloc error'                              00013700
         mvc   22(2,r1),S99ERROR                                        00013800
         mvi   24(r1),x'00'                                             00013900
         unpk  17(5,r1),22(3,r1)                                        00014000
         j     allocr                                                   00014100
*---------------------------------------------------------------------- 00014200
*  Free                                                                 00014300
*---------------------------------------------------------------------- 00014400
free     st    r14,free_s                                               00014500
         mvc   close1(mclosel),mclose                                   00014600
         CLOSE INPUT,MODE=31,MF=(E,CLOSE1)                              00014700
         la    r2,ds99                                                  00014800
         using s99rbp,r2                                                00014900
         la    r3,s99rbptr+4                                            00015000
         using s99rb,r3                                                 00015100
         st    r3,s99rbptr                                              00015200
         oi    s99rbptr,s99rbpnd                                        00015300
         xc    s99rb(rblen),s99rb                                       00015400
         mvi   s99rbln,rblen                                            00015500
         mvi   s99verb,s99vrbun                                         00015600
         la    r4,s99rb+rblen                                           00015700
         using s99tupl,r4                                               00015800
         st    r4,s99txtpp                                              00015900
         mvc   retddnu,=al2(dalddnam)                                   00016000
         la    r5,retddnu                                               00016100
         using s99tunit,r5                                              00016200
         la    r4,s99tupl+4                                             00016300
         st    r5,s99tuptr                                              00016400
         oi    s99tuptr,s99tupln                                        00016500
         la    r1,ds99                                                  00016600
         dynalloc                                                       00016700
         ltr   r15,r15                                                  00016800
         jnz   freeerr                                                  00016900
freer    storage RELEASE,length=scrsize,addr=(r9)                       00017000
         l     r14,free_s                                               00017100
         br    r14                                                      00017200
freeerr  l     r1,sqlstate                                              00017300
         mvc   0(5,r1),=CL5'38603'                                      00017400
         l     r1,msgtxt                                                00017500
         mvc   0(2,r1),=h'25'                                           00017600
         mvc   2(19,r1),=c'Dynalloc free error'                         00017700
         mvc   27(2,r1),S99ERROR                                        00017800
         mvi   29(r1),x'00'                                             00017900
         unpk  22(5,r1),27(3,r1)                                        00018000
         j     freer                                                    00018100
*---------------------------------------------------------------------- 00018200
* Nextmemb                                                              00018300
*---------------------------------------------------------------------- 00018400
nextmemb st    r14,nextmemb_s                                           00018500
         l     r2,saver2                                                00018600
         l     r3,saver3                                                00018700
         ltr   r3,r3                                                    00018800
         jnz   skip                                                     00018900
nextb    get   input,dirblk                                             00019000
         la    r3,dirblk               Dir Blk addr                     00019100
         ah    r3,dirblk               + Length                         00019200
         la    r2,dirblk+2             Start of block                   00019300
nextm    cr    r2,r3                                                    00019400
         jnl   nextb                                                    00019500
         using pds2,r2                                                  00019600
         cli   pds2name,x'fe'          No tratar undo Endevor           00019700
         je    skip                                                     00019800
         clc   pds2name,=xl8'ffffffffffffffff' End of dir?              00019900
         je    eof                                                      00020000
         l     r1,member                                                00020100
         mvc   0(8,r1),pds2name                                         00020200
         l     r1,imember                                               00020300
         mvc   0(2,r1),=h'0'                                            00020400
         j     nextmembr                                                00020500
skip     ic    r1,pds2indc             get bytes                        00020600
         sll   r1,27                   shift left                       00020700
         srl   r1,26                   shift right                      00020800
         la    r2,12(r2,r1)            New offset                       00020900
         j     nextm                                                    00021000
eof      equ   *                                                        00021100
         l     r1,sqlstate                                              00021200
         mvc   0(5,r1),=CL5'02000'                                      00021300
nextmembr st   r2,saver2                                                00021400
         st    r3,saver3                                                00021500
         l     r14,nextmemb_s                                           00021600
         br    r14                                                      00021700
*---------------------------------------------------------------------- 00021800
*  constants                                                            00021900
*---------------------------------------------------------------------- 00022000
ppa      ceeppa  ,                 constants describing the code block  00022100
         ltorg ,                   place literal pool here              00022200
rblen    equ (s99rbend-s99rb)                                           00022300
MINPUT   DCB   DDNAME=INPUT,DSORG=PS,MACRF=GM,RECFM=U,BLKSIZE=256,     +00022400
               EODAD=EOF                                                00022500
minputl  equ   *-minput                                                 00022600
MOPEN    OPEN  (,),MODE=31,MF=L                                         00022700
mopenl   equ   *-mopen                                                  00022800
MCLOSE   CLOSE (),MODE=31,MF=L                                          00022900
mclosel  equ   *-mclose                                                 00023000
mwto     WTO   TEXT=,MF=L                                               00023100
mwtol    EQU   *-mwto                                                   00023200
*---------------------------------------------------------------------- 00023300
*  work                                                                 00023400
*---------------------------------------------------------------------- 00023500
worka    dsect                                                          00023600
         org   *+ceedsasz          leave space for dsa fixed part       00023700
         ds    0d                                                       00023800
alloc_s  ds    a                                                        00023900
free_s   ds    a                                                        00024000
checkp_s ds    a                                                        00024100
nextmemb_s ds  a                                                        00024200
debug_s  ds    a                                                        00024300
wto1     ds    xl(mwtol)                                                00024400
ds99     ds    xl50                                                     00024500
debugl   ds    xl2                                                      00024600
debugt   ds    cl80                                                     00024700
worksize equ   *-worka                                                  00024800
*---------------------------------------------------------------------- 00024900
*  scratchpatch                                                         00025000
*---------------------------------------------------------------------- 00025100
scr      dsect                                                          00025200
dsntu    ds    xl2                                                      00025300
dsntuc   ds    xl2                                                      00025400
dsntul   ds    xl2                                                      00025500
dsntud   ds    cl44                                                     00025600
statustu ds    xl2                                                      00025700
statustc ds    xl2                                                      00025800
statustl ds    xl2                                                      00025900
statustd ds    c                                                        00026000
retddnu  ds    al2(dalrtddn)                                            00026100
retddnc  ds    x'0001'                                                  00026200
retddnl  ds    x'0008'                                                  00026300
retddnd  ds    cl8                                                      00026400
open1    ds    xl(mopenl)                                               00026500
close1   ds    xl(mclosel)                                              00026600
input    ds    xl(minputl)                                              00026700
dirblk   ds    0d,xl256          pds-directory block                    00026800
saver2   ds    f                                                        00026900
saver3   ds    f                                                        00027000
scrsize  equ   *-scr                                                    00027100
*---------------------------------------------------------------------- 00027200
*  mapas                                                                00027300
*---------------------------------------------------------------------- 00027400
         ceedsa  ,                 mapping of the dynamic save area     00027500
         ceecaa  ,                 mapping of the common anchor area    00027600
         iefzb4d0                                                       00027700
         iefzb4d2                                                       00027800
         ihapds pdsbldl=NO,dsect=YES                                    00027900
parm     dsect                                                          00028000
lib      ds    a                   pointer to libname                   00028100
member   ds    a                   pointer to member                    00028200
ilib     ds    a                   pointer to libname indicator         00028300
imember  ds    a                   pointer to member indicator          00028400
sqlstate ds    a                   pointer to sql state                 00028500
family   ds    a                   pointer to function family name      00028600
specific ds    a                   pointer to function specific name    00028700
msgtxt   ds    a                   pointer to diagnostic message        00028800
scratch  ds    a                   pointer to scratch patch area        00028900
calltype ds    a                   pointer to call type parameter       00029000
         end   kb5adir                                                  00029100
