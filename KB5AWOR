KB5AWOR  CEEENTRY AUTO=PROGSIZE,MAIN=YES,PLIST=OS                       00000100
         YREGS                                                          00000200
         USING PROGAREA,R13                                             00000300
         LR    R10,R1              Get pointer to parm                  00000400
* Load Parm                                                             00000500
         USING PARM,R10                                                 00000600
         L     R2,PTRSTR                                                00000700
         L     R3,PTRPOS                                                00000800
         L     R4,PTRCHR                                                00000900
         L     R5,PTRRES                                                00001000
         L     R6,PTRINDS                                               00001100
         L     R7,PTRINDP                                               00001200
         L     R8,PTRINDC                                               00001300
         L     R9,PTRINDR                                               00001400
         DROP  R10                                                      00001500
* Check String                                                          00001600
         LH    R1,0(R6)            Load String indicator                00001700
         LTR   R1,R1               Check it it is negative              00001800
         JM    NULL                If so, result is NULL                00001900
* Check Position                                                        00002000
         LH    R1,0(R7)            Load Position indicator              00002100
         LTR   R1,R1               Check it it is negative              00002200
         JM    NULL                If so, result is NULL                00002300
         L     R1,0(R3)            Load Position                        00002400
         LTR   R1,R1               Check it it is negative or zero      00002500
         JNP   NULL                If so, result is NULL                00002600
* Check Char                                                            00002700
         LH    R1,0(R8)            Load Char indicator                  00002800
         LTR   R1,R1               Check it it is negative              00002900
         JM    DEFCHAR             If so, result is NULL                00003000
         MVC   CHAR,2(R4)          Copy Char                            00003100
         J     MAIN                                                     00003200
DEFCHAR  MVI   CHAR,C' '           Default char is blank                00003300
* Main proc                                                             00003400
MAIN     EQU   *                                                        00003500
         LH    R10,0(R2)           String length                        00003600
         LA    R2,2(R2)            String start                         00003700
         L     R3,0(R3)            Word position                        00003800
         LA    R4,1                Current Word                         00003900
         SR    R6,R6               Result length                        00004000
         LA    R7,2(R5)            Result start                         00004100
LOOP     CLC   0(1,R2),CHAR        Test char                            00004200
         JNE   NCHAR               Not separator                        00004300
         LA    R4,1(R4)            Current Word += 1                    00004400
         LA    R2,1(R2)            Next position                        00004500
         BCT   R10,LOOP            Loop                                 00004600
         J     ENDSTR              End of String                        00004700
NCHAR    CR    R4,R3               Word = My Word ?                     00004800
         JE    CPCH                Yes, copy                            00004900
         JH    ENDSTR              Terminated?                          00005000
         LA    R2,1(R2)            Source position += 1                 00005100
         BCT   R10,LOOP            Loop                                 00005200
         J     ENDSTR                                                   00005300
CPCH     MVC   0(1,R7),0(R2)       Copy result                          00005400
         LA    R7,1(R7)            Dest position += 1                   00005500
         LA    R2,1(R2)            Source position += 1                 00005600
         LA    R6,1(R6)            Used Length += 1                     00005700
         BCT   R10,LOOP            Loop                                 00005800
ENDSTR   STH   R6,0(R5)            Save result length                   00005900
         MVC   0(2,R9),=H'0'       Not null                             00006000
         J     END                                                      00006100
NULL     MVC   0(2,R9),=H'-1'      NULL result                          00006200
END      CEETERM  RC=0                                                  00006300
*******************************************************************     00006400
*  VARIABLE DECLARATIONS AND EQUATES                              *     00006500
*******************************************************************     00006600
PPA      CEEPPA  ,                 CONSTANTS DESCRIBING THE CODE BLOCK  00006700
         LTORG ,                   PLACE LITERAL POOL HERE              00006800
PROGAREA DSECT                                                          00006900
         ORG   *+CEEDSASZ          LEAVE SPACE FOR DSA FIXED PART       00007000
CHAR     DS    C                                                        00007100
PROGSIZE EQU   *-PROGAREA                                               00007200
         CEEDSA  ,                 MAPPING OF THE DYNAMIC SAVE AREA     00007300
         CEECAA  ,                 MAPPING OF THE COMMON ANCHOR AREA    00007400
PARM     DSECT                                                          00007500
PTRSTR   DS    A                   Pointer to String                    00007600
PTRPOS   DS    A                   Pointer to Position                  00007700
PTRCHR   DS    A                   Pointer to Chr                       00007800
PTRRES   DS    A                   Pointer to Result                    00007900
PTRINDS  DS    A                   Pointer to String   indicator        00008000
PTRINDP  DS    A                   Pointer to Position indicator        00008100
PTRINDC  DS    A                   Pointer to Chr indicator             00008200
PTRINDR  DS    A                   Pointer to Result indicator          00008300
         END   KB5AWOR                                                  00008400
